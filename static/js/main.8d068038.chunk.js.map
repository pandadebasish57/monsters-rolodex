{"version":3,"sources":["logo.svg","component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","name","email","CardList","monsters","map","id","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAAe,I,wBCEFA,EAAK,SAAAC,GAAK,OACnB,sBAAKC,UAAU,iBAAf,UACI,qBACAC,IAAI,UACJC,IAAK,2EAEJ,6BAAKH,EAAMI,QAAQC,OACnB,4BAAIL,EAAMI,QAAQE,YCNdC,EAAW,SAAAP,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQM,UCFlBC,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACnB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCCG,E,kDArCb,aAAc,IAAD,8BACX,gBAeFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAdpC,EAAKC,MAAM,CACTd,SAAS,GACTW,YAAY,IAId,EAAKN,aAAa,EAAKA,aAAaU,KAAlB,gBATP,E,qDAWb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAE,EAAKV,SAAS,CAACV,SAASoB,S,oBAKvC,WAAS,IAAD,EACwBC,KAAKP,MAA5Bd,EADD,EACCA,SAASW,EADV,EACUA,YACVW,EAAiBtB,EAASuB,QAAO,SAAA3B,GAAO,OAC5CA,EAAQC,KAAK2B,cAAcC,SAASd,EAAYa,kBAElD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACGW,YAAY,kBACZC,aAAcgB,KAAKhB,eAEtB,cAAC,EAAD,CAAUL,SAAUsB,W,GAhCVI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8d068038.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './card.style.css';\r\nexport const Card=props=>(\r\n    <div className='card-container'>\r\n        <img \r\n        alt=\"monster\" \r\n        src={'https://robohash.org/UJR.png?set=set2&size=180*180/${props.monster.id}'}\r\n        />\r\n         <h2>{props.monster.name}</h2>\r\n         <p>{props.monster.email}</p>\r\n\r\n    </div>\r\n);","import React from 'react';\r\nimport './card-list.style.css';\r\nimport {Card} from '../card/card.component';\r\nexport const CardList = props=>(\r\n    <div className='card-list'>\r\n        {props.monsters.map(monster=>(\r\n            <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const Searchbox=({placeholder,handleChange})=>(\r\n    <input \r\n    className='search'\r\n    type='search' \r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n        />\r\n\r\n);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {CardList, Cardlist} from './component/card-list/card-list.component';\nimport { Component } from 'react';\nimport{Searchbox} from './component/search-box/search-box.component';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state={\n      monsters:[],\n      searchField:''\n  \n    };\n\n    this.handleChange=this.handleChange.bind(this);\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json())\n    .then(users=>this.setState({monsters:users}));\n  }\n  handleChange = e =>{\n    this.setState({searchField:e.target.value});\n  }\n  render(){\n    const{ monsters,searchField }=this.state;\n    const filteredMonsters=monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    return(\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Searchbox\n           placeholder='Search Monsters'\n           handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters}/>   \n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}